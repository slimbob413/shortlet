{"ast":null,"code":"var _s = $RefreshSig$();\n/**\n * RequireRole Component\n * \n * Protects routes based on user role:\n * - Checks JWT token for role\n * - Redirects to login if unauthorized\n * - Shows toast error message\n */\n\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport jwtDecode from 'jwt-decode';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RequireRole = ({\n  children,\n  role\n}) => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      toast.error('Please log in to access this page');\n      navigate('/login');\n      return;\n    }\n    try {\n      const decoded = jwtDecode(token);\n      if (decoded.role !== role) {\n        toast.error('You do not have permission to access this page');\n        navigate('/dashboard');\n      }\n    } catch (error) {\n      toast.error('Invalid session. Please log in again');\n      navigate('/login');\n    }\n  }, [navigate, role]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_s(RequireRole, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = RequireRole;\nexport default RequireRole;\nvar _c;\n$RefreshReg$(_c, \"RequireRole\");","map":{"version":3,"names":["React","useEffect","useNavigate","toast","jwtDecode","Fragment","_Fragment","jsxDEV","_jsxDEV","RequireRole","children","role","_s","navigate","token","localStorage","getItem","error","decoded","_c","$RefreshReg$"],"sources":["/Users/tobe/Documents/Workshop/Shortlet/frontend/src/components/RequireRole.tsx"],"sourcesContent":["/**\n * RequireRole Component\n * \n * Protects routes based on user role:\n * - Checks JWT token for role\n * - Redirects to login if unauthorized\n * - Shows toast error message\n */\n\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport jwtDecode from 'jwt-decode';\n\ninterface JWTPayload {\n  userId: number;\n  role: string;\n}\n\ninterface RequireRoleProps {\n  children: React.ReactNode;\n  role: 'user' | 'agent' | 'admin';\n}\n\nconst RequireRole: React.FC<RequireRoleProps> = ({ children, role }) => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      toast.error('Please log in to access this page');\n      navigate('/login');\n      return;\n    }\n\n    try {\n      const decoded = jwtDecode<JWTPayload>(token);\n      if (decoded.role !== role) {\n        toast.error('You do not have permission to access this page');\n        navigate('/dashboard');\n      }\n    } catch (error) {\n      toast.error('Invalid session. Please log in again');\n      navigate('/login');\n    }\n  }, [navigate, role]);\n\n  return <>{children}</>;\n};\n\nexport default RequireRole; "],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,iBAAiB;AACnC,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAYnC,MAAMC,WAAuC,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACtE,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMa,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACVX,KAAK,CAACc,KAAK,CAAC,mCAAmC,CAAC;MAChDJ,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;IAEA,IAAI;MACF,MAAMK,OAAO,GAAGd,SAAS,CAAaU,KAAK,CAAC;MAC5C,IAAII,OAAO,CAACP,IAAI,KAAKA,IAAI,EAAE;QACzBR,KAAK,CAACc,KAAK,CAAC,gDAAgD,CAAC;QAC7DJ,QAAQ,CAAC,YAAY,CAAC;MACxB;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdd,KAAK,CAACc,KAAK,CAAC,sCAAsC,CAAC;MACnDJ,QAAQ,CAAC,QAAQ,CAAC;IACpB;EACF,CAAC,EAAE,CAACA,QAAQ,EAAEF,IAAI,CAAC,CAAC;EAEpB,oBAAOH,OAAA,CAAAF,SAAA;IAAAI,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACE,EAAA,CAxBIH,WAAuC;EAAA,QAC1BP,WAAW;AAAA;AAAAiB,EAAA,GADxBV,WAAuC;AA0B7C,eAAeA,WAAW;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}