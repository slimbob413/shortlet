{"ast":null,"code":"var _jsxFileName = \"/Users/tobe/Documents/Workshop/Shortlet/frontend/src/pages/BookingManagementPage.tsx\",\n  _s = $RefreshSig$();\n/**\n * Booking Management Page\n * \n * Displays a list of bookings for properties owned by the agent:\n * - Shows pending bookings with confirm/cancel actions\n * - Shows confirmed bookings with cancel action\n * - Handles loading states and error messages\n */\n\nimport React, { useState } from 'react';\nimport BookingTable from '../components/BookingTable';\nimport RequireAuth from '../components/RequireAuth';\nimport { API_BASE_URL } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingManagementPage = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleConfirm = async bookingId => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch(`${API_BASE_URL}/bookings/${bookingId}/confirm`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        const data = await response.json();\n        throw new Error(data.error || 'Failed to confirm booking');\n      }\n      alert('Booking confirmed successfully');\n      // Refresh the booking list\n      window.location.reload();\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to confirm booking');\n      alert(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCancel = async bookingId => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch(`${API_BASE_URL}/bookings/${bookingId}/cancel`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        const data = await response.json();\n        throw new Error(data.error || 'Failed to cancel booking');\n      }\n      alert('Booking cancelled successfully');\n      // Refresh the booking list\n      window.location.reload();\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to cancel booking');\n      alert(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold text-gray-800 mb-8\",\n      children: \"Manage Bookings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(BookingTable, {\n      isOwner: true,\n      onConfirm: handleConfirm,\n      onCancel: handleCancel,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingManagementPage, \"Iz3ozxQ+abMaAIcGIvU8cKUcBeo=\");\n_c = BookingManagementPage;\nexport default () => /*#__PURE__*/_jsxDEV(RequireAuth, {\n  children: /*#__PURE__*/_jsxDEV(BookingManagementPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 96,\n  columnNumber: 3\n}, this);\nvar _c;\n$RefreshReg$(_c, \"BookingManagementPage\");","map":{"version":3,"names":["React","useState","BookingTable","RequireAuth","API_BASE_URL","jsxDEV","_jsxDEV","BookingManagementPage","_s","loading","setLoading","error","setError","handleConfirm","bookingId","response","fetch","method","headers","localStorage","getItem","ok","data","json","Error","alert","window","location","reload","err","message","handleCancel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isOwner","onConfirm","onCancel","_c","$RefreshReg$"],"sources":["/Users/tobe/Documents/Workshop/Shortlet/frontend/src/pages/BookingManagementPage.tsx"],"sourcesContent":["/**\n * Booking Management Page\n * \n * Displays a list of bookings for properties owned by the agent:\n * - Shows pending bookings with confirm/cancel actions\n * - Shows confirmed bookings with cancel action\n * - Handles loading states and error messages\n */\n\nimport React, { useState } from 'react';\nimport BookingTable from '../components/BookingTable';\nimport RequireAuth from '../components/RequireAuth';\nimport { API_BASE_URL } from '../utils/api';\n\nconst BookingManagementPage: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const handleConfirm = async (bookingId: number) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const response = await fetch(`${API_BASE_URL}/bookings/${bookingId}/confirm`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        const data = await response.json();\n        throw new Error(data.error || 'Failed to confirm booking');\n      }\n\n      alert('Booking confirmed successfully');\n      // Refresh the booking list\n      window.location.reload();\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to confirm booking');\n      alert(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCancel = async (bookingId: number) => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      const response = await fetch(`${API_BASE_URL}/bookings/${bookingId}/cancel`, {\n        method: 'PUT',\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        const data = await response.json();\n        throw new Error(data.error || 'Failed to cancel booking');\n      }\n\n      alert('Booking cancelled successfully');\n      // Refresh the booking list\n      window.location.reload();\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to cancel booking');\n      alert(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-3xl font-bold text-gray-800 mb-8\">Manage Bookings</h1>\n      {error && (\n        <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-4\">\n          {error}\n        </div>\n      )}\n      <BookingTable \n        isOwner={true} \n        onConfirm={handleConfirm}\n        onCancel={handleCancel}\n        loading={loading}\n      />\n    </div>\n  );\n};\n\nexport default () => (\n  <RequireAuth>\n    <BookingManagementPage />\n  </RequireAuth>\n); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}