{"ast":null,"code":"var _s = $RefreshSig$();\n/**\n * RequireRole Component\n * \n * Protects routes based on user role:\n * - Checks JWT token for role\n * - Redirects to login if unauthorized\n * - Shows toast error message\n */\n\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { ROUTES } from '../constants/routes';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RequireRole = ({\n  children,\n  role,\n  roles\n}) => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      toast.error('Please log in to access this page');\n      navigate(ROUTES.LOGIN);\n      return;\n    }\n    try {\n      const payload = token.split('.')[1];\n      const decodedPayload = JSON.parse(atob(payload));\n      const userRole = decodedPayload.role;\n\n      // Check if user has required role\n      const allowedRoles = roles || (role ? [role] : []);\n      if (allowedRoles.length > 0 && !allowedRoles.includes(userRole)) {\n        toast.error('You do not have permission to access this page');\n        navigate(ROUTES.UNAUTHORIZED);\n      }\n    } catch (error) {\n      toast.error('Invalid session. Please log in again');\n      navigate(ROUTES.LOGIN);\n    }\n  }, [navigate, role, roles]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_s(RequireRole, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = RequireRole;\nexport default RequireRole;\nvar _c;\n$RefreshReg$(_c, \"RequireRole\");","map":{"version":3,"names":["React","useEffect","useNavigate","toast","ROUTES","Fragment","_Fragment","jsxDEV","_jsxDEV","RequireRole","children","role","roles","_s","navigate","token","localStorage","getItem","error","LOGIN","payload","split","decodedPayload","JSON","parse","atob","userRole","allowedRoles","length","includes","UNAUTHORIZED","_c","$RefreshReg$"],"sources":["/Users/tobe/Documents/Workshop/Shortlet/frontend/src/components/RequireRole.tsx"],"sourcesContent":["/**\n * RequireRole Component\n * \n * Protects routes based on user role:\n * - Checks JWT token for role\n * - Redirects to login if unauthorized\n * - Shows toast error message\n */\n\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport { jwtDecode } from 'jwt-decode';\nimport { ROUTES } from '../constants/routes';\n\ninterface JWTPayload {\n  userId: number;\n  role: string;\n}\n\ninterface RequireRoleProps {\n  children: React.ReactNode;\n  role?: string;\n  roles?: string[];\n}\n\nconst RequireRole: React.FC<RequireRoleProps> = ({ children, role, roles }) => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      toast.error('Please log in to access this page');\n      navigate(ROUTES.LOGIN);\n      return;\n    }\n\n    try {\n      const payload = token.split('.')[1];\n      const decodedPayload = JSON.parse(atob(payload));\n      const userRole = decodedPayload.role;\n\n      // Check if user has required role\n      const allowedRoles = roles || (role ? [role] : []);\n      if (allowedRoles.length > 0 && !allowedRoles.includes(userRole)) {\n        toast.error('You do not have permission to access this page');\n        navigate(ROUTES.UNAUTHORIZED);\n      }\n    } catch (error) {\n      toast.error('Invalid session. Please log in again');\n      navigate(ROUTES.LOGIN);\n    }\n  }, [navigate, role, roles]);\n\n  return <>{children}</>;\n};\n\nexport default RequireRole; "],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,iBAAiB;AAEnC,SAASC,MAAM,QAAQ,qBAAqB;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAa7C,MAAMC,WAAuC,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,IAAI;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC7E,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMc,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACVZ,KAAK,CAACe,KAAK,CAAC,mCAAmC,CAAC;MAChDJ,QAAQ,CAACV,MAAM,CAACe,KAAK,CAAC;MACtB;IACF;IAEA,IAAI;MACF,MAAMC,OAAO,GAAGL,KAAK,CAACM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACnC,MAAMC,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACL,OAAO,CAAC,CAAC;MAChD,MAAMM,QAAQ,GAAGJ,cAAc,CAACX,IAAI;;MAEpC;MACA,MAAMgB,YAAY,GAAGf,KAAK,KAAKD,IAAI,GAAG,CAACA,IAAI,CAAC,GAAG,EAAE,CAAC;MAClD,IAAIgB,YAAY,CAACC,MAAM,GAAG,CAAC,IAAI,CAACD,YAAY,CAACE,QAAQ,CAACH,QAAQ,CAAC,EAAE;QAC/DvB,KAAK,CAACe,KAAK,CAAC,gDAAgD,CAAC;QAC7DJ,QAAQ,CAACV,MAAM,CAAC0B,YAAY,CAAC;MAC/B;IACF,CAAC,CAAC,OAAOZ,KAAK,EAAE;MACdf,KAAK,CAACe,KAAK,CAAC,sCAAsC,CAAC;MACnDJ,QAAQ,CAACV,MAAM,CAACe,KAAK,CAAC;IACxB;EACF,CAAC,EAAE,CAACL,QAAQ,EAAEH,IAAI,EAAEC,KAAK,CAAC,CAAC;EAE3B,oBAAOJ,OAAA,CAAAF,SAAA;IAAAI,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACG,EAAA,CA7BIJ,WAAuC;EAAA,QAC1BP,WAAW;AAAA;AAAA6B,EAAA,GADxBtB,WAAuC;AA+B7C,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}